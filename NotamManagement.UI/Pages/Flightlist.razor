@page "/flightlist"
@using NotamManagement.UI.Pages.Dialogs
@attribute [Authorize]

<MudDataGrid MultiSelection="true" Items="@FlightPlans" Filterable="true" Groupable="true" GroupExpanded="false">
    <ToolBarContent>
        
        <MudText Typo="Typo.h6">Flights</MudText>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Success" OnClick="OpenCreateFligtPlan" />
    </ToolBarContent>
    <Columns>
        <HierarchyColumn T="FlightPlan"></HierarchyColumn>
        <PropertyColumn Property="x => x.Departure.ICAO" Title="Departure"/>
        <PropertyColumn Property="x => x.Destination.ICAO" Title="Destination"/>
    </Columns>
    <ChildRowContent>
        <MudCard>
            @* <MudCardHeader> *@
            @*     <CardHeaderContent> *@
            @*         <MudText Typo="Typo.h6">@context.Item.Name</MudText> *@
            @*     </CardHeaderContent> *@
            @* </MudCardHeader> *@
            <MudCardContent>
                <MudText><b>Route:</b> @(string.Join(" \u2192 ", context.Item.Airports.Select(x => x.ICAO)))</MudText>
            </MudCardContent>
        </MudCard>  
    </ChildRowContent>
</MudDataGrid>

@code {
    [Inject] public IFlightPlanService FlightPlanService {get; set; } = null!;
    [Inject] public ApiAuthenticationStateProvider AuthStateProvider{ get; set; } = null!;
    [Inject] public IDialogService DialogService { get; set; } = null!;
    [Inject] public NavigationManager NavigationManager { get; set; } = null!;
    
    List<FlightPlan> FlightPlans = [];

    protected override async Task OnInitializedAsync()
    {
        

        var result = await FlightPlanService.GetAllAsync();
        
        FlightPlans = result.ToList();
        
        

    }

    private async Task OpenCreateFligtPlan()
    {

        // Get the authentication state
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        // Retrieve the OrganizationId claim
        var organizationIdClaim = user.FindFirst("OrganizationId");
       

        var dialog = await DialogService.ShowAsync<FlightPlanCreateDialog>("Do something to this notam");
        var result = await dialog.Result;

        if (result is { Canceled: false })
        {

            NavigationManager.NavigateTo("/flightlist");

            NavigationManager.NavigateTo("/");

        }
    }
}