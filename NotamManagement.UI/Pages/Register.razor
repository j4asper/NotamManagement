@page "/register"
@using System.Net.Http.Headers
@using NotamManagement.Core.Services
@using Microsoft.AspNetCore.Components.Authorization

@inject HttpClient Http
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject ApiAuthenticationStateProvider AuthStateProvider

<h3>Register</h3>

<MudForm Model="registerModel">
    <div>
        <MudInput @bind-Value="registerModel.Email" Placeholder="Email" Required="true"/>
        <MudInput @bind-Value="registerModel.Password" placeholder="Password" InputType="InputType.Password" Required="true" />
        <MudInput @bind-Value="confirmPass" placeholder="Confirm Password" InputType="InputType.Password" Required="true" />
        <MudInput @bind-Value="registerModel.FullName" placeholder="Full Name" Required="true" />
        <MudButton OnClick="@(()=>HandleRegister())" >Register</MudButton>
    </div>
    <label>@errorMessage</label>
</MudForm>

@code {
    private RegisterDTO registerModel = new();
    private string? errorMessage;
    private string? confirmPass;

    private async Task HandleRegister()
    {
        try
        {
            if (registerModel.Password != confirmPass)
            {
                throw new Exception("Passwords do not match");
            }

            // Get the authentication state
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            // Retrieve the OrganizationId claim
            var organizationIdClaim = user.FindFirst("OrganizationId");
            if (organizationIdClaim != null)
            {
                registerModel.OrganizationId = int.Parse(organizationIdClaim.Value);
            }
            else
            {
                throw new Exception("OrganizationId claim not found");
            }

            // Post the register model to the API
            var response = await Http.PostAsJsonAsync("/register", registerModel);
            response.EnsureSuccessStatusCode();
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = $"Register failed: {ex.Message}";
        }
    }
}